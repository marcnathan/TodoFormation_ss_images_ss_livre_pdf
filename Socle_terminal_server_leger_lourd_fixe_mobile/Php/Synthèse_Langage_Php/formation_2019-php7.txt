> Notes
	- 
	- 
	- 
	- 

	
	
> Php 7
	- à évaluer les possiblités
		- de la configuration php.ini (modules)
		- de librairies, fonctions, class, interface, Api... du language et différences entre versions
		- de projets et ressources sur le net
	- à évaluer le minimum 
		- en s'appuyant sur l'indexe de la Formation Zend Php
	- manuel en ligne
		- ressources
			- net
				- http://php.net/manual/fr/migration70.new-features.php
			- livre
				- 
		- lien indexe complet
			- 
		- procédées essentiels
			- installation
				- 
					- 
			- commandes
				- 
				
				- 
				
			- outils
				- 
	
	
							
							(à traiter dans php 7)
							- https://www.smashingmagazine.com/2009/01/50-extremely-useful-php-tools/
							- http://php.net/manual/fr/wrappers.php
							- http://php.net/manual/fr/context.php
							- https://learnxinyminutes.com/docs/php/
							- http://php.net/zend.assertions
							- http://php.net/com.typelib-file
							- cli ?
							- comment est lié à php.ini
								- des librairies php
									- perl
									
							- si de par la résolution de la base de l'url par rapport aux alias si il y en a,
							définit dans la conf,
							apache passe le traitement de la requête pour une réponse,
							à l'" index.php " définit comme DirectoryIndex d'un domaine,
							qui est le front contrôleur d'une application,
							et si les erreurs de pages d'erreur était traiter par lui,
							peut il modifier le header ? Oui.
							
							- comment faire pour changer les paramètres php.ini ?
								- default_mimetype
								- default_charset
								- include_path
								- extension_dir
								- max_execution_time
								- error_reporting
								- max_file_upload
								- session.upload_progress.enabled
								- soap.wsdl_cache_enabled
								- opcache
								- curl
								- openssl
								- ...
	
	*- php (7.* et 5.*)
		- ressources
			- net
				- https://openclassrooms.com/courses/programmez-en-oriente-objet-en-php#
			- livre
				- 
		1- native
		
			- divers (à traiter dans php 7)
				- https://www.smashingmagazine.com/2009/01/50-extremely-useful-php-tools/
				- http://php.net/manual/fr/wrappers.php
				- http://php.net/manual/fr/context.php
				- https://learnxinyminutes.com/docs/php/
				- http://php.net/zend.assertions
				- http://php.net/com.typelib-file
				- cli ?
				- comment est lié à php.ini
					- des librairies php
						- perl
						
				- si de par la résolution de la base de l'url par rapport aux alias si il y en a,
				définit dans la conf,
				apache passe le traitement de la requête pour une réponse,
				à l'" index.php " définit comme DirectoryIndex d'un domaine,
				qui est le front contrôleur d'une application,
				et si les erreurs de pages d'erreur était traiter par lui,
				peut il modifier le header ? Oui.
				
				- comment faire pour changer les paramètres php.ini ?
					- default_mimetype
					- default_charset
					- include_path
					- extension_dir
					- max_execution_time
					- error_reporting
					- max_file_upload
					- session.upload_progress.enabled
					- soap.wsdl_cache_enabled
					- opcache
					- curl
					- openssl
					- ...
		
			
			- Installation et configuration
				- Considérations générales sur l'installation
				- Installation sur les systèmes UNIX
				- Installation sur un système macOS
				- Installation sur les système Windows
				- Installation sur des plateformes de Cloud Computing
				- FastCGI Process Manager (FPM)
				- Installation d'extensions PECL
				- Des problèmes ?
				- Configuration à l'exécution
		
			- Référence du langage
				- La syntaxe de base
				- Les types
				- Les variables
				- Les constantes
				- Les expressions
				- Les opérateurs
				- Les structures de contrôle
				- Les fonctions
				- Les classes et les objets
					- Syntaxe de base
					- Propriétés
					- Constantes de classe
					- Auto-chargement de classes
						- spl_autoload_register
					- Constructeurs et destructeurs
					- Visibilité
					- Héritage
					- L'opérateur de résolution de portée (::)
>>					- Statique
>>					- Abstraction de classes
						> Implémentation
						- Se définit avec le mot clé abstract class
						- Ne peuvent être instanciés

						> Propriétés
						- On ne peut pas y définir une propriété 

						> Méthodes
						- Toute méthode abstraite doit être définit dans la class héritière
							- Ces méthodes se préfixe avec le mot clé abstract
							- Et perdent cette affectation de l'implémentation
						- La signature des méthodes implémentés doit correspondre dans l'héritage
						- On peut y implémenter des méthodes non abstraite
						- Leur visibilité peut être étendue de l'héritage

						> Héritage
						- S'effectue par le mot clé extends
						- On ne peut hériter que d'une classe abstract (?)
>>					- Interfaces
						> Implémentation
						- Contrainte d'emploi permettant, des injections de classes, à la classe de savoir si des méthodes existent
						- Se définit par la mot clé interphase
						- Ne peuvent être instanciés

						> Propriétés
						- On peut définir des constantes
						- Les constantes définit ne peuvent pas être redéfinit
						- On peut appeler les constantes hors de l'interphase

						> Méthodes
						- Toutes les méthodes sont déclarées public
						- Mais aucune n'a de contenu de spécifié
						- La signature des méthodes implémentés doit correspondre dans l'héritage

						> Héritage
						- On peut étendre des interphases par des interphases par le mot clé extends
						- S'effectue par le mot clé implements
						- On peut hériter de plusieurs interphases si les méthodes sont différentes
>>					- Traits
						> Implémentation
						- Quand on doit effectuer la même opération (celle de formater en HTML) dans deux classes complètement différentes et indépendantes
						- Se définit par la mot clé trait
						- Ne peuvent être instanciés

						> Propriétés
						- On peut définir des propriétés
						- Les propriétés statiques ne peuvent être définit que dans les méthodes
						- Les propriétés définit ne peuvent être redéfinits

						> Méthodes
						- Elles pré-valent par rapport à celles de la class parente
						- Elles sous-valent par rapport à celles de la class de référence
						- On peut définir des méthodes abstracts
						- Des méthodes statiques peuvent définits
						- Leurs visibilités peuvent être redéfinit avec le mot clé as
						- Elles peuvent porter des alias
						- En cas de conflit d'héritage on peut définir une sélection par la syntaxe
						use A, B {
								B::smallTalk insteadof A;
								A::bigTalk insteadof B;
								B::bigTalk as talk;
							}

						> Héritage
						- S'effectue par le mot clé use et multiple par la juxtaposition
						- On peut étendre des trait par le mot clé use dans le Trait
						- On peut hériter de plusieurs interphases
>>					- Classes anonymes
					- Surcharge magique
					- Parcours d'objets
					- Méthodes magiques
					- Mot-clé "final"
					- Clônage d'objets
					- Comparaison d'objets
					- Typage objet
					- Late Static Bindings (Résolution statique à la volée)
					- Objets et références
					- Sérialisation d'objets
					- Modifications en POO (Programmation orientée objet)
>>				- Les espaces de noms
					- Introduction aux espaces de noms
					- Définition des espaces de noms
					- Déclaration d'un sous espace de noms
					- Définition de plusieurs espaces de noms dans le même fichier
					- Utilisation des espaces de noms : introduction
					- Espaces de noms et langage dynamique
					- La commande namespace et la constante __NAMESPACE__
					- Utilisation des espaces de noms : importation et alias
					- Espace de noms global
					- Utilisation des espaces de noms : retour à l'espace global
					- Règles de résolutions de noms
					- Foire aux questions : ce que vous devez savoir des espaces de noms
>>				- Erreurs (voir Dtrace vers 250)
>>				- Les exceptions
					- try{}catch(){}catch(){}finally{}
				- Generators
				- Les références
				- Variables prédéfinies
				- Exceptions prédéfinies
					- Exception
					- ErrorException
				- Interfaces et Classes prédéfinies
					- php
						- L'interface Traversable
							- Interface permettant de détecter si une classe peut être parcourue en utilisant foreach. Interface du moteur interne qui ne peut être implémentée dans des scripts PHP, à la place utiliser IteratorAggregate ou Iterator.
							
						- L'interface Iterator
							- Interface pour les itérateurs ou les objets externes qui peuvent être itérés eux-même en interne.
							
						- L'interface IteratorAggregate
							- Interface pour créer des itérateurs externes.
							
						- L'interface Throwable
							- Is the base interface for any object that can be thrown via a throw statement in PHP 7, includinbg Error and Exception.
							PHP classes cannot implement the Throwable interface directly, and must instead extend Exception.
							
						- L'interface ArrayAccess
							- Interface permettant d'accéder aux objets de la même façon que pour les tableaux.
							
						- L'interface Serializable
							- Interface permettant de personnaliser la linéarisation.
							
						- La class Closure
							- Classe utilisé pour représenter les fonctions anonymes.
							Depuis PHP 5.4, cette classe possède des méthodes qui permettent de prendre le contrôle sur la fonction après sa création.
							
						- La class Generator
							- Les générateurs fournissent une façon simple de mettre en place des itérateurs sans le coût ni la complexité du developpement d'une classe qui implémente l'interface Iterator.
					- spl
						- Itérateurs spl
							- ArrayIterator
								// Cet itérateur permet de réinitialiser et de modifier les valeurs et les clés lors 
								// de l'itération de tableaux et d'objets.

								// Lorsque vous voulez passer en revue le même tableau plusieurs fois, vous devez 
								// instancier ArrayObject et le laisser créer les objets ArrayIterator qui s'y 
								// réfèrent, soit en utilisant l'instruction foreach, soit en appelant la méthode 
								// getIterator() manuellement.
								
								- RecursiveArrayIterator
									// Cet itérateur permet la suppression et la modification de valeurs et clés 
									// durant l'itération sur des tableaux et des objets, de la même façon que 
									// ArrayIterator. De plus, il est possible d'itérer sur l'élément courant.
									
							- EmptyIterator
								// La classe EmptyIterator créer un objet itérateur vide.
								
							- IteratorIterator
								Cet itérateur permet la conversion de n'importe quel objet Traversable en un itérateur. Il est important de comprendre que la plupart des classes qui n'implémentent pas l'interface Iterator, ne le font pas car elles ne disposent pas de toutes les méthodes des itérateurs. Si c'est le cas, des mécanismes doivent être mis en place pour l'éviter, car autrement, cela produirait des exceptions ou des erreurs fatales.
								
								- AppendIterator
									// Un itérateur qui itère sur plusieurs itérateurs les uns après les autres.
									
								- CachingIterator
									// Cet objet supporte les itérations en cache sur un autre itérateur.
									
									- RecursiveCachingIterator
									// Cet objet supporte les itérations en cache sur un autre itérateur.
									
							- FilterIterator
								// 
								
								- CallbackFilterIterator
									// 
									
									- RecursiveCallbackFilterIterator
										// 
										
								- RecursiveFilterIterator
									// 
									
									- ParentIterator
										// 
										
								- RegexIterator
									// 
									
									- RecursiveRegexIterator
										// 
										
								- InfiniteIterator
									// 
									
								- LimitIterator
									// 
									
								- NoRewindIterator
									// 
									
							- MultipleIterator
								// 
								
							- RecursiveIteratorIterator
								// 
								
								- RecursiveTreeIterator
									// 
									
							- DirectoryIterator (extends SplFileInfo)
								// 
								
								- FilesystemIterator
									// 
									
									- GlobIterator
										// 
										
									- RecursiveDirectoryIterator
										// 
										
						- Interfaces spl

							- Countable
								// Les classes qui implémentent l'interface Countable peuvent // être utilisée avec la fonction count().
								
							- OuterIterator
								// Les classes implémentant la classe OuterIterator peuvent être
								// itérer sur des itérateurs.
								
							- RecursiveIterator
								// Les classes qui implémentes RecursiveIterator peut être utilisées pour itérer sur d'autres itérateurs récursivement.
								
							- SeekableIterator
								// // Permet de recharcher et confirmer l'existance d'un élément d'un tableau.
								
						- Fonction SPL
                
							// class_implements 
								// — Retourne les interfaces implémentées par une classe ou une interface donnée
								
							// class_parents 
								// — Retourne la classe parente d'une classe
							
							// class_uses 
								// — Retourne les traits utilisé par une classe donnée.
							
							// iterator_apply 
								// — Appelle une fonction pour tous les éléments d'un itérateur
							
							// iterator_count 
								// — Compte de nombre d'éléments dans un itérateur
							
							// iterator_to_array 
								// — Copie un itérateur dans un tableau
							
							// spl_autoload_call 
								// — Essai toutes les fonctions __autoload() enregistrées pour charger la classe demandée
							
							// spl_autoload_extensions 
								// — Enregistre et retourne l'extension du fichier par défaut pour spl_autoload
							
							// spl_autoload_functions 
								// — Retourne toutes les fonctions __autoload() enregistrées
							
							// spl_autoload_register 
								// — Enregistre une fonction en tant qu'implémentation de __autoload()
							
							// spl_autoload_unregister 
								// — Efface une fonction donnée de l'implémentation __autoload()
							
							// spl_autoload 
								// — Implémentation par défaut d'__autoload()
							
							// spl_classes 
								// — Retourne les classes SPL disponibles
							
							// spl_object_hash 
								// — Retourne l'identifiant de hashage pour un objet donné
							
							// spl_object_id 
								// — Return the integer object handle for given object
                
						- Classes et interfaces diverses spl
							- ArrayObject
								// This class allows objects to work as arrays.
								
							- SplObserver
								// The SplObserver interface is used alongside SplSubject to implement the Observer Design Pattern
								
							- SplSubject
								// The SplObserver interface is used alongside SplObserver to implement the Observer Design Pattern
								
					- classes réservées
					
						- Classes standards

							- Directory
								// Instances of Directory are created bycalling the dir()
								// function, not by the new operator.
								
							- stdClass
								// Class standart aux propriétés paramétrable
								
							- __PHP_Incomplete_Class
								// Une classe spécifique instancié quand on instancie une class
							/	/ inconnue lors d'une unsérialisation
							
						- Classes prédéfinies en PHP 5
						
							- Exception
								// Exception is the base class for all Exceptions in PHP 5,
								// and the base class for all user exception in PHP 7.
								// Before PHP7, Exception did not implement the Throwable interface.
								
							- ErrorException
								// A class the extends Exception
								
							- php_user_filter
								// A class to be extended while using streams (fopen, ...) and to
								// set filters to their readings
								
						- Closure

							- Closure // voir ligne 235
							
						- Générateur

							- Generator // voir ligne 239
							
						- Les classes et les interfaces prédéfinies depuis PHP 7
						
							- ArithmeticError
								// ArithmeticError is a class extending Error that is thrown when
								// an error occurs while performing
								// mathematical operations. In PHP 7.0, these errors include 
								// attempting to perform a bitshift by a negative amount,
								// and any call to intdiv() that would result in a value outside
								// the possible bounds of an integer.
								
							- AssertionError
								// AssertionError is thrown an assertion made via assert() fails.
								
							- DivisionByZeroError
								// DivisionByZeroError is thrown when an attempt is made to 
								// divide a number by zero.
								
							- Error
								// Error is the base class for all internal PHP errors.
								
							- Throwable
								// Throwable is the base interface for any object the can be 
								// thrown via " throw " statement in PHP 7, including Error 
								// and Exception.
								
								// PHP classes cannot implement the Throwable interface directly,
								// and must instead extend Exception.
								
							- ParseError
								// ParseError is thrown when an error occurs while parsing PHP 
								// code, such as when eval() is called.
        
								// ParseError extends CompilError as of PHP 7.3.
								// Formerly, it extended Error.
								
							- TypeError
								// There are three scenarios where a TypeError may be thrown.
								// The first is where the argument type being passed to a 
								// function does not match its corresponding declared 
								// parameter type.
								// The second is where a value being returned from a function
								// does not match the declared function return type.
								// The third is where an invalid number of arguments are passed 
								// to built-in PHP function (strict mode only).
								
							- Throwable and Exception in PHP 7.2
								// irbrake.io/blog/php-exception-handling/the-php-exception-class-hierarchy
							
								- Error
									- ArithmeticError
										- DivisionByZeroError
									- AssertionError
									- ParseError
									- TypeError
										- ArgumentCountError
										
								- Exception
									- ClosedGeneratorException
									- DOMException
									- ErrorException
									- IntlException
									- LogicException
										- BadFunctionCallException
											- BadMethodCallException
										- DomainException
										- InvalidArgumentException
										- LengthException
										- OutOfRangeException
									- PharException
									- ReflectionException
									- RuntimeException
										- OutOfBoundsException
										- OverflowException
										- PDOException
										- RangeException
										- UnderflowException
										- UnexpectedValueException
									- SodiumException 
								
						- Classes spéciales
						
							- self - Scope Resolution Operator (::)
								// The scope Resolution Operator, is a token that allows 
								// to static, constant, and overridden propreties or a
								// class.
								
							- static - Late Static Bindings
								// Late static bindings tries to solve that limitation 
                                // by introducing a keyword that references the class 
                                // that was initially called at runtime. Basically,
                                // a keyword that would allow you to reference B from test()
                                // in the previouse example. It was decided not to 
                                // introduce a new keyword but rather use static 
                                // that was already reserved.
								
                                // if " {static}::[proprety|method] " at a level
                                // then " {static} " = the first calling class 
								
							- parent - Scope Resolution Operator (::)
								- 
								
						- Other Exception
						
							- errorexception
							- lengthexception
							- rarexception
							- solrserverexception
							- solrclientexception
							- gearmanexception
							- solrexception
							- mongocursorexception
							- yar_client_exception
							- overflowexception
							- mongoexception
							- stompexception
							- cairoexception
							- oauthexception
							- logicexception
							- mongoconnectionexception
							- zookeepernonodeexception
							- invalidargumentexception
							- underflowexception
							- zookeepersessionexception
							- pdoexception
							- domexception
							- mongoprotocolexception
							- zookeeperauthenticationexception
							- outofrangeexception
							- zookeepermarshallingexception
							- solrillegaloperationexception
							- intlexception
							- pharexception
							- jsonexception
						
				- Options et paramètres de contexte
					// Php offers various context options and parameters which can 
					// be used with all filesystem and stream wrappers.
					// The context is created with stream_context_create(). Options
					// are set with stream_context_set_option() and parameters with
					// stream_context_set_params();
					
						// Socket context options — Socket context option listing
						
							// Basic bindto usage example
						
						// HTTP context options — HTTP context option listing
						
							// Fetch a page and send POST data
							
						// FTP context options — FTP context option listing
						// SSL context options — SSL context option listing
						// CURL context options — CURL context option listing
						// Phar context options — Phar context option listing
						// MongoDB context options — MongoDB context option listing
						// Context parameters — Context parameter listing
						// Zip context options — Zip context option listing

					
				- Liste des protocoles et des gestionnaires supportés
					
					// PHP comes with many built-in wrappers for various URL-style 
					// protocols for use with the filesystem functions such as fopen(), 
					// copy(), file_exists() and filesize(). In addition to these 
					// wrappers, it is possible to register custom wrappers using 
					// the stream_wrapper_register() function.
					
						// file:// — Accessing local filesystem
						// http:// — Accessing HTTP(s) URLs
						// ftp:// — Accessing FTP(s) URLs
						// php:// — Accessing various I/O streams
						// zlib:// — Compression Streams
						// data:// — Data (RFC 2397)
						// glob:// — Find pathnames matching pattern
						// phar:// — PHP Archive
						// ssh2:// — Secure Shell 2
						// rar:// — RAR
						// ogg:// — Audio streams
						// expect:// — Process Interaction Streams

						
			- Sécurité
				- ...
				- Données transmises par les internautes
				- Sécurité des Sessions
				- Sécurité des fichiers
				- Sécurité des bases de données
				- Rapport d'erreurs
				- Utilisation des variables super-globales
				- ...
				
			- Caractéristiques
				- ...
				- Utiliser les XForms
				- Gestion des chargements de fichiers
					// POST method uploads
					// Error Messages Explained
					// Common Pitfalls
					// Uploading multiple files
						// ajax file with end reception check
					// PUT method support
				- Utilisation des fichiers à distance
				- Gestion des connexions
				- Connexions persistantes aux bases de données
				- Safe mode
				- Utilisation des lignes de commande — Utiliser PHP en ligne de commande
					- 
				- Ramasse-miettes (Garbage Collection)
				- DTrace Dynamic Tracing
					- 
						
			- Référence des fonctions
				- Affecte le comportement de PHP
				- Manipulation audio
				- Services d'identification
				- Extensions spécifiques à la ligne de commande
				- Extensions sur l'archivage et la compression
				- Traitement des cartes de crédit
				- Extensions sur la cryptographie
				- Extensions sur les bases de données
					- Interface d'abstraction
						- DBA — Couche d'abstraction de base de données (style dbm)
						- dbx
						- ODBC — ODBC (Unifié)
						- PDO — PHP Data Objects
					- Extensions spécifiques des fabricants de bases de données
						- CUBRID
						- DB++
						- dBase
						- filePro
						- Firebird/InterBase
						- FrontBase
						- IBM DB2 — Fonctions IBM DB2, Cloudscape et Apache Derby
						- Informix
						- Ingres — Ingres DBMS, EDBC, et Enterprise Access
						- MaxDB
						- Mongo — Driver MongoDB (obsolète)
						- MongoDB — MongoDB driver
						- mSQL
						- Mssql — Serveur MS SQL
						- MySQL — Plugins et drivers MySQL
						- OCI8 — Oracle OCI8
						- Paradox
						- PostgreSQL
						- SQLite
						- SQLite3
						- SQLSRV — Driver Microsoft SQL Server pour PHP
						- Sybase
						- tokyo_tyrant
				- Extensions relatives aux dates et aux heures
				- Extensions relatives aux systèmes de fichiers
				- Support du langage humain et de l'encodage de caractères
				- Génération et traitement des images
				- Extensions relatives aux emails
				- Extensions sur les mathématiques
				- Affichage des données non-textuelles
				- Extensions sur le contrôle des processus
				- Autres extensions basiques
					- SPL
						- Introduction
						- Installation/Configuration
						- Constantes pré-​définies
						- Structures des données
						- Itérateurs
						- Interfaces
						- Exceptions
						- Fonctions SPL
							- class_implements 
								— Retourne les interfaces implémentées par une classe ou une interface donnée
							- class_parents 
								— Retourne la classe parente d'une classe
							- class_uses 
								— Retourne les traits utilisé par une classe donnée.
							- iterator_apply 
								— Appelle une fonction pour tous les éléments d'un itérateur
							- iterator_count 
								— Compte de nombre d'éléments dans un itérateur
							- iterator_to_array 
								— Copie un itérateur dans un tableau
							- spl_autoload_call 
								— Essai toutes les fonctions __autoload() enregistrées pour charger la classe demandée
							- spl_autoload_extensions 
								— Enregistre et retourne l'extension du fichier par défaut pour - spl_autoload
							- spl_autoload_functions 
								— Retourne toutes les fonctions __autoload() enregistrées
							- spl_autoload_register 
								— Enregistre une fonction en tant qu'implémentation de __autoload()
							- spl_autoload_unregister 
								— Efface une fonction donnée de l'implémentation __autoload()
							- spl_autoload 
								— Implémentation par défaut d'__autoload()
							- spl_classes 
								— Retourne les classes SPL disponibles
							- spl_object_hash 
								— Retourne l'identifiant de hashage pour un objet donné
							- spl_object_id 
								— Return the integer object handle for given object
						- Gestion des fichiers
						- Classes et interfaces diverses
				- Autres services
				- Extensions spécifiques aux moteurs de recherche
				- Extensions spécifiques aux serveurs
				- Extensions sur les Sessions
				- Traitement du texte
				- Extensions relatives aux variables et aux types
				- Services Web
				- Extensions pour Windows uniquement
				- Manipulation XML
				- Extensions GUI
				
			- Dans le coeur de PHP : Guide du Hacker
				- ...
				- Memory management
				- ...
				- Working with Resources
				- Working with INI settings
				- Working with streams
				- ...
					
>>			- FAQ : foire Aux Questions
					- PHP et HTML
					- PHP et COM
				
>>>			- Annexes
				- ...
					- différences entre les vers
					- http://php.net/manual/fr/migration70.php - 5.6 à 7.0
						// Backward incompatible changes
							// Changes to error and exception handling
								// set_exception_handler() is no longer guaranteed to 
									// receive Exception objects
								// Internal constructors always throw exceptions on failure
								// Parse errors throw ParseError
								// E_STRICT notices severity changes
							// Changes to variable handling
								// Changes to the handling of indirect variables, properties, 
									// and methods
								// Changes to list() handling
									// list() no longer assigns variables in reverse order
									// Empty list() assignments have been removed
									// list() cannot unpack strings
								// Array ordering when elements are automatically created 
									// during by reference assignments has changed
								// Parentheses around function arguments no longer affect behaviour
								// Changes to foreach
									// foreach no longer changes the internal array pointer
									// foreach by-value operates on a copy of the array
									// foreach by-reference has improved iteration behaviour 
									// Iteration of non-Traversable objects
								// Changes to integer handling
									// Invalid octal literals
									// Negative bitshifts
									// Out of range bitshifts
									// Changes to Division By Zero
									// 
								// Changes to string handling
									// Hexadecimal strings are no longer considered numeric
									// \u{ may cause errors
								// Removed functions
									// call_user_method() and call_user_method_array()
									// All ereg* functions
									// All ext/mysql functions
									// mcrypt aliases
									// All ext/mssql functions
									// intl aliases
									// set_magic_quotes_runtime()
									// set_socket_blocking()
									// dl() in PHP-FPM
									// GD Type1 functions
								// Removed INI directives
									// Removed features
								// Other backward incompatible changes
									// New objects cannot be assigned by reference
									// Invalid class, interface and trait names
									// ASP and script PHP tags removed
									// Calls from incompatible context removed
									// yield is now a right associative operator
									// Functions cannot have multiple parameters with the same name
									// Functions inspecting arguments report the current parameter value
									// Switch statements cannot have multiple default blocks
									// $HTTP_RAW_POST_DATA removed
									// # comments in INI files removed
									// SON extension replaced with JSOND
									// Internal function failure on overflow
									// Fixes to custom session handler return values
									// Sort order of equal elements
									// Misplaced break and switch statements
									// Mhash is not an extension anymore
						// New features
							// Scalar type declarations
							// Return type declarations
							// Null coalescing operator
							// Spaceship operator
							// Constant arrays using define()
							// Anonymous classes
							// Unicode codepoint escape syntax
							// Closure::call()
							// Filtered unserialize()
							// IntlChar
							// Expectations
							// Group use declarations
							// Generator Return Expressions
							// Generator delegation
							// Integer division with intdiv()
							// Session options
							// preg_replace_callback_array()
							// CSPRNG Functions
							// list() can always unpack objects implementing ArrayAccess
							// Other Features
						// Deprecated features in PHP 7.0.x
							// PHP 4 style constructors
							// Static calls to non-static methods
							// password_hash() salt option
							// capture_session_meta SSL context option
							// LDAP deprecations
						// Changed functions
							// PHP Core
						// New functions
							// Closure
							// CSPRNG
							// Error Handling and Logging
							// Generator
							// GNU Multiple Precision
							// Math
							// PCRE
							// PHP Options/Info
							// Reflection
							// Zip
							// Zlib Compression
						// New Classes and Interfaces
							// Intl
							// Reflection 
							// Session Handling
							// Exception Hierarchy
						// New Global Constants
							// Core Predefined Constants
							// GD
							// JSON
							// LibXML
							// PCRE
							// POSIX
							// Zlib
						// Changes in SAPI Modules
							// FPM
								// Unqualified listen ports now listen on both IPv4 and IPv6
						// Removed Extensions and SAPIs
							// Removed Extensions
							// Removed SAPIs
						// Other Changes
							// Loosening Reserved Word Restrictions
							// Removal of date.timezone Warning
					- http://php.net/manual/fr/migration71.php - 7.0 à 7.1
						- New features
						- New functions
						- Nouvelles constantes globales
						- Backward incompatible changes
						- Les fonctionnalités dépréciées dans PHP 7.1.x
						- Fonctions modifiées
						- Other changes
						- Windows Support
					- http://php.net/manual/fr/migration72.php - 7.1 à 7.2
						- Nouvelles fonctionnalités
						- Nouvelles fonctions
						- Nouvelles constantes globales
						- Évolutions incompatibles avec les versions précédentes
						- Fonctionnalités devenues obsolètes en PHP 7.2.x
						- Autres changements
				- Débogueur PHP
				- Options de configuration
				- Directives du php.ini
				- Liste des modes de transport de sockets disponibles

					
>>>		2- php design patterns / ~ 37
			> Design Patterns PHP
				- http://designpatternsphp.readthedocs.io/en/latest/README.html
					- acheter livre <<<<<< !!!!!!!!!
				- https://sourcemaking.com/design_patterns
					- acheter livre <<<<<< !!!!!!!!!
			
			- todo
				- checker le php de chaque DP 
					- des définitions par rapport aux deux sites 
					- formater un /DP_php/fichier.php avec exemple et testes par DP
		
			- Creational Patterns /9
				- Abstract Factory 				Sets of methods to make various objects.
				- Builder 						Make and return one object various ways.
				- Factory Method 				Methods to make and return components of one object various ways.
				- Multiton
				- Pool							Avoid expensive acquisition and release of resources by recycling objects that are no longer in use 
				- Prototype 					Make new objects by cloning the objects which you set as prototypes.
				- Simple Factory				
				- Singleton 					A class distributes the only instance of itself.
				- Static Factory
			- Structural Patterns /12
				- Adapter 						A class extends another class, takes in an object, and makes the taken object behave like the extended class.
				- Bridge 						An abstraction and implementation are in different class hierarchies.
				- Composite 					Assemble groups of objects with the same signature.
				- Data Mapper
				- Decorator 					One class takes in another class, both of which extend the same abstract class, and adds functionality.
				- Dependency Injection
				- Facade 						One class has a method that performs a complex process calling several other classes.
				- Fluent Interface
				- Flyweight 					The reusable and variable parts of a class are broken into two classes to save resources.
				- Private Class Data
				- Proxy 						One class controls the creation of and access to objects in another class.
				- Registry
			- Behavorial Patterns /13
				- Chain Of Responsibility 		A method called in one class can move up a hierarchy to find an object that can properly execute the method.
				- Command 						An object encapsulates everything needed to execute a method in another object.
				- Interpreter 					Define a macro language and syntax, parsing input into objects which perform the correct opertaions.
				- Iterator 						One object can traverse the elements of another object.
				- Mediator 						An object distributes communication between two or more objects.
				- Memento 						One object stores another objects state.
				- Null Object					Designed to act as a default value of an object 
				- Observer 						An object notifies other object(s) if it changes.
				- Specification
				- State 						An object appears to change its` class when the class it passes calls through to switches itself for a related class.
				- Strategy 						An object controls which of a family of methods is called. Each method is in its` own class that extends a common base class.
				- Template Method				An abstract class defines various methods, and has one non-overridden method which calls the various methods.
				- Visitor						One or more related classes have the same method, which calls a method specific for themselves in another class.
			- Other PHP Design Patterns /5
				- Non OO MVC 					MVC - Model View Controller - shown using procedural and not OO architecture.
				- Delegation
				- Service Locator
				- Repository
				- Entity-Attribute-Value (EAV)
				
>>>		3- php librairies, extension et outils
			- https://www.smashingmagazine.com/2009/01/50-extremely-useful-php-tools/
				- Debugging Tools
					- Webgrind
						- Webgrind is an Xdebug profiling Web front end in PHP 5. It implements a subset of the features of kcachegrind, installs in seconds and works on all platforms. For quick ‘n’ dirty optimizations, it does the job.
					- Xdebug
						- Xdebug is one of the most popular debugging PHP extensions. It provides a ton of useful data to help you quickly find bugs in your source code. Xdebug plugs right into many of the most popular PHP applications, such as PHPEclipse and phpDesigner.
					- Gubed PHP Debugger
						- As the name implies, Gubed PHP Debugger is a PHP debugging tool for hunting down logic errors.
					- DBG
						- DBG is a robust and popular PHP debugger for use in local and remote PHP debugging. It plugs into numerous PHP IDE’s and can easily be used with the command line.
					- PHP_Debug
						- PHP_Debug is an open-source project that gives you useful information about your PHP code that can be used for debugging. It can output processing times of your PHP and SQL, check the performance of particular code blocks and get variable dumps in graphical form, which is great if you need a more visual output than the one given to you by print_r() or var_dump().
					- PHP_Dyn
						- PHP_Dyn is another excellent PHP debugging tool that’s open-source. You can trace execution and get an output of the argument and return values of your functions.
					- MacGDBp
						- MacGDBp is a live PHP debugger application for the Mac OS. It has all the features you’d expect from a fully featured debugger, such as the ability to step through your code and set breakpoints.
					
>>>				- Testing and Optimization Tools
					- PHPUnit
						- PHPUnit is a complete port of the popular JUnit unit testing suite to PHP 5. It’s a tool that helps you test your Web application’s stability and scalability. Writing test cases within the PHPUnit framework is easy; here’s how to do it.
					- SimpleTest
						- SimpleTest is a straightforward unit-testing platform for PHP applications. To get up and running with SimpleTest quickly, read through this pragmatic tutorial that shows you how to create a new test case.
					- Selenium
						- Selenium Remote Control (RC) is a test tool that allows you to write automated Web application UI tests in any programming language against any HTTP website using any mainstream JavaScript-enabled browser. It can be used in conjunction with PHPUnit to create and run automated tests within a Web browser.
					- PHP_CodeSniffer
						- PHP_CodeSniffer is a PHP 5 script for detecting conformance to a predefined PHP coding standard. It’s a helpful tool for maintaining uniform coding styles for large projects and teams.
					- dBug
						- dBug is ColdFusion’s cfDump for PHP. It’s a simple tool for outputting data tables that contain information about arrays, classes and objects, database resources and XML resources, making it very useful for debugging purposes.
					- PHP Profile Class
						- PHP Profile Class is an excellent PHP profiling tool for your Web applications. Using this class will help you quickly and easily gain insight into which parts of your app could use some refactoring and optimization.
					- Prefix
						- 
					- Retrace
						- 
					- Microservices
						- 
					- Stratégies de caches
						- 
					- Load balancing
						- 
					
>>>				- Documentation Tools
					- phpDocumentor
						- phpDocumentor (also known as phpdoc and phpdocu) is a documentation tool for your PHP source code. It has an innumerable amount of features, including the ability to output in HTML, PDF, CHM and XML DocBook formats, and has both a Web-based and command-line interface as well as source-code highlighting. To learn more about phpDocumentor, check out the online manual.
					- PHP DOX
						- An AJAX-powered PHP documentation search engine that enables you to search titles from all PHP documentation pages.
					
>>>				- Security Tools
					- Securimage
						- Securimage is a free, open-source PHP CAPTCHA script for generating complex images and CAPTCHA codes to protect forms from spam and abuse.
					- Scavenger
						- Scavenger is an open-source, real-time vulnerability management tool. It helps system administrators respond to vulnerability findings, track vulnerability findings and review accepted and false-positive answered vulnerabilities, without “nagging” them with old vulnerabilities.
					- PHP-IDS
						- PHP-IDS (PHP-Intrusion Detection System) is a simple-to-use, well-structured, fast and state-of-the-art security layer for your PHP-based Web application.
					- Pixy: PHP Security Scanner
						- Pixy is a Java program that performs automatic scans of PHP 4 source code, aimed to detect XSS and SQL injection vulnerabilities. Pixy takes a PHP program as input and creates a report that lists possible vulnerable points in the program, along with additional information for understanding the vulnerability.
				
>>>				- Image Manipulation and Graphs
					- PHP/SWF Charts
						- PHP/SWF Charts is a powerful PHP tool that enables you to create attractive Web charts and graphs from dynamic data. You can use PHP scripts to generate and gather data from databases, then pass it to this tool to generate Flash (SWF) charts and graphs.
					- pChart - a chart-drawing PHP library
						- pChart is a PHP class-oriented framework designed to create aliased charts. Most of today’s chart libraries have a cost; this one is free. Data can be retrieved from SQL queries or CSV files or can be manually provided.
					- WideImage
						- WideImage is a PHP library for dynamic image manipulation and processing for PHP 5. To be able to use the library, you should have the GD PHP extension installed on your Web server.
					- MagickWand For PHP
						- MagickWand For PHP is a PHP module suite for working with the ImageMagick API, which lets you create, compose and edit bitmap images. It’s a useful tool for quickly incorporating image-editing features in your PHP applications.
				
>>>				- PHP Code Beautifier
					- PHP_Beautifier
						- PHP Beautifier is a PEAR package for automatically formatting and “beautifying” PHP 4 and PHP 5 source code.
					- PHPCodeBeautifier
						- PHPCodeBeautifier is a tool that saves you from hours of reformatting code to suit your own way of presenting it. A GUI version allows you to process files visually; a command-line version can be batched or integrated with other tools (like CVS, SubVersion, IDE, etc.); and there is also an integrated tool of PHPEdit.
					- GeSHi - Generic Syntax Highlighter
						- GeSHi is designed to be a simple but powerful highlighting class, with the goal of supporting a wide range of popular languages. Developers can easily add new languages for highlighting and define easily customizable output formats.
					 
>>>				- Version-Control Systems
					- Phing
						- Phing is a popular project version-control system for PHP. It is a useful tool for organizing and maintaining different builds of your project.
					- xinc
						- xinc is a continuous integration server version-control system written in PHP 5 (i.e. continuous builds instead of nightly builds). It works great with other systems such as Subversion and Phing.
					
>>>				- Useful Extensions, Utilities and Classes
					- SimplePie
						- SimplePie is a PHP class that helps you work with RSS feeds. Check out the online RSS and Atom feed reader, which demonstrates a simple Web application that uses SimplePie.
					- HTML Purifier
						- HTML Purifier is a standards-compliant HTML filter library written in PHP. HTML Purifier not only removes all malicious code (better known as XSS) with a thoroughly audited, secure yet permissive white list, it also makes sure your documents are standards-compliant. Open source and highly customizable.
					- TCPDF
						- TCPDF is an open-source PHP class for generating PDF documents.
					- htmlSQL
						- htmlSQL is a unique tool. It is a PHP class for querying HTML values in an SQL-like syntax. Check out the live demonstration of how htmlSQL works.
					- The Greatest PHP Snippet File Ever (Using Quicktext for Notepad++)
						- “A little something for all coders: a snippets file that I use for PHP coding. This is designed to be used with Quicktext for Notepad++, but feel free to adapt it to whatever text editor you prefer.”
					- Creole
						- Creole is a database abstraction layer for PHP5. It abstracts PHP’s native database-specific API to create more portable code while also providing developers with a clean, fully object-oriented interface based loosely on the API for Java’s JDBC.
					- PHPLinq
						- LINQ is a component that adds native data querying capabilities to PHP using a syntax reminiscent of SQL. It defines a set of query operators that can be used to query, project and filter data in arrays, enumerable classes, XML, relational databases and third-party data sources. [via]
					- PHPMathPublisher
						- With PhpMathPublisher, you can publish mathematical documents on the Web using only a PHP script (no LaTeX programs on the server and no MathML).
					- phpMyAdmin
						- If you’re working with PHP, there’s a big chance you’re set up in a LAMP configuration. phpMyAdmin is Web-based tool for managing, building, importing, exporting and exploring MySQL databases.
					- PHPExcel
						- PHPExcel is a set of useful PHP classes for working with Microsoft Excel files. PHPExcel allows you to read Excel files and write to them. This is useful for dynamically generating Excel spreadsheets for downloading.
					- Phormer
						- Phormer is a PHP-based photo gallery management application that helps you to store, categorize and trim your photos online.
					- xajax PHP Class Library
						- xajax is a PHP class for easily working with PHP AJAX applications. It gives you an easy-to-use API for quickly managing AJAX-related tasks. Check out the xajax Multiplier demo and the Graffiti Wall demo to see the xajax PHP class in action.
					- PHP User Class
						- PHP User Class is an excellent script that helps you create a system for user authentication (i.e. registration, log in, account profile, etc.). It’s a useful utility to have around if you require user registration for your Web applications.
					- PHP-GTK
						- PHP-GTK is a PHP extension for the GTK+ toolkit (a robust toolkit for developing GUIs). It is a suite of useful OOP functions and classes to help you rapidly build cross-platform, client-side GUI’s for your application.
					
>>>				- PHP Online Tools and Resources
					- Minify!
						- Minify is a PHP 5 app that can combine multiple CSS or JavaScript files, compress their content (i.e. remove unnecessary white space and comments) and serve the results with HTTP encoding (via Gzip/deflate) and headers that allow optimal client-side caching. This will help you follow several of Yahoo!’s Rules for High Performance Websites.
					- HTTP_StaticMerger: Automatic “merging” of CSS and JavaScript files
						- This library automatically merges sets of static files (CSS or JavaScript) and speeds up page loading (by lowering the number of HTTP queries). It is recommended to use this together with caching reverse-proxy to minimize the response time.
					- PHP Object Generator
						- PHP Object Generator is an open-source Web-based tool that helps you quickly construct PHP objects and leverage object-oriented programming (OOP) principles in your code.
					- gotAPI/PHP
						- gotAPI is a useful online tool for quickly looking up PHP functions and classes. Also check out the Quick PHP look-up widget example in case you’d like to include this awesome look-up feature on your website.
					- koders
						- koders is a search engine for open-source and downloadable code. It currently has over a billion lines of code indexed and isn’t limited to just PHP.
					- PECL
						- PECL is a directory of all known PHP extensions and a hosting facility for downloading and developing PHP extensions.
					
>>>				- In-Browser Tools (Firefox Add-Ons)
					- FirePHP
						- FirePHP is a Firefox extension that allows you to log data in Firebug. It has a variety of useful logging features, such as the ability to change your error and exception handling on the fly and to log errors directly to the Firebug console. To learn more about what FirePHP can do, check out the FirePHP guide on how to use FirePHP. For developers using the Zend PHP framework, you might find this guide on using FirePHP with Zend useful.
					- phpLangEditor
						- phpLangEditor is a very handy Firefox add-on for translating language files and variables in your script.
					- PHP Lookup
						- PHP Lookup is a built-in search bar to help you quickly look up references to PHP syntax.
					- PHP Manual Search
						- PHP Manual Search is a handy search bar that searches official PHP documentation from within your Web browser.
					
>>>				- Frameworks for PHP
***					- Dwoo
						- Dwoo is a PHP 5 template engine positioned as an alternative to Smarty. It is (nearly) fully compatible with its templates and plug-ins, but it is being written from scratch and is aimed to go one step further with a cleaner code base.
***					- CodeIgniter
						- CodeIgniter is a powerful, high-performance, open-source PHP framework that helps you author PHP applications rapidly. CodeIgniter is known for having a light footprint, thereby reducing your server’s work. You can get up and running with CodeIgniter in a jiffy: it has an awesome online manual, a couple of helpful video tutorials and an active user forum.
***					- YII Framework
						- Here is a high-performance component-based PHP framework that is supposed to be more efficient than CodeIgniter, CakePHP, ZF and Symfony. An optimal solution for developing large-scale Web applications. Yii supports MVC, DAO/ActiveRecord, I18N/L10N, caching, jQuery-based AJAX support, authentication and role-based access control, scaffolding, input validation, widgets, events, theming and Web services.
***					- Solar
						- Solar is a PHP 5 development framework for Web applications derived from the Savant templating engine. Solar uses the MVC architectural pattern and has a host of classes and functions for securing your Web app against SQL injection, cross-website scripting (XSS) and other common exploits.
***					- symfony
						- symfony is an open-source PHP 5 Web application framework that is well known for its modularity and useful library of classes. To get up and running as fast as possible, you should check out the pragmatic symfony online tutorial called “The symfony 1.2 advent calendar tutorial,” which takes you through a step-by-step example of building your own symfony-based Web application.
***					- PEAR - PHP Extension and Application Repository
						- PEAR is a popular framework and distribution system for reusable PHP components. The purpose of the framework is to provide a structured library of open-source code for PHP users, a system for code distribution and package maintenance and a standard style for PHP code.
***					- Propel
						- Propel is an Object-Relational Mapping (ORM) framework for PHP 5. It allows you to access your database using a set of objects, providing a simple API for storing and retrieving data.
***					- {{macro}} template engine
						- {{macro}} compiles initial templates into executable PHP scripts with very clean syntax (much cleaner than WACT and Smarty) and executes them very fast. The engine doesn’t use an XML-like syntax; there are only two data scopes, global and local, and no more data sources (all data is displayed with regular PHP variables); and the system supports all WACT features such as templates wrapping and including.
***					- Zend Framework
						- The Zend Framework by Zend Technologies (the creators of PHP’s scripting engine) is a popular PHP Web application framework that embraces the principles of PHP OOP; it’s very extensible and has built-in utilities for working with free Web service APIs, such as those of Google, Flickr and Amazon.
***					- Qcodo
						- Qcodo is an excellent open-source PHP Web application framework. It’s subdivided into two parts: (1) Code Generator, and (2) Qforms. Code Generator handles the creation of object code and PHP and HTML front-end code from your data model. Qforms is an intuitive system for handling and creating complex PHP-driven HTML Web forms. Check out demos of applications that use Qcodo and presentational material that covers Qcodo.
***					- SAJAX
						- SAJAX is a JavaScript and AJAX application framework that works well with PHP (as well as several other server-side scripting languages). See SAJAX at work by going to Wall live demonstration.
***					- Smarty
						- Smarty is a popular PHP templating system to help you separate PHP logic and front-end code (HTML, CSS, JavaScript). It will keep your projects modular and easier to maintain.
***					- CakePHP
						- CakePHP is one of the leading PHP frameworks for creating robust, fully-featured Web applications. CakePHP has an extensive and well-organized online manual. If you want to learn via video tutorials, check out the CakePHP screencasts.
					- Savant2
						- Savant2 is another popular object-oriented PHP templating system. Instead of a special syntax unique to Savant2, you use PHP syntax to develop your project’s template.
***					- PHPSpec
						- PHPSpec is a simple and intuitive PHP framework. It follows the Behavior-Driven Development principle and therefore allows you to write behavior-oriented code, oftentimes in plain English.
					
>>>				- PHP IDEs and Editors	
					- PHPEclipse
						- PHPEclipse is a popular PHP source-code editor that is open source and runs on all the major operating systems, such as Windows, Linux and Mac OS. It has all the features you’d expect from a PHP source-code editor, such as code-folding, syntax highlighting, hover-over tool tips and support for XDebug and DBG.
					- PhpED
						- PhpED is an excellent IDE for Windows users. It is one of the most robust and feature-packed IDEs currently out on the market and has useful features such as a built-in source-code profiler to find bottlenecks in your PHP source code and excellent integration with third-party apps and services just as front-end code validation.
					- phpDesigner
						- phpDesigner is a lightweight PHP editor/IDE that also handles front-end code and markup remarkably well. Check out the phpDesigner online tutorials, as well as screencasts on phpDesigner to help you learn more about the IDE.
					- Zend Studio
						- Zend Studio is an excellent PHP IDE for Eclipse. It’ll help you develop, deploy and manage Rich Internet Applications (RIAs) in an intuitive interface.
					- Aptana PHP
						- Aptana PHP is an open-source IDE extension/plug-in to be used in conjunction with Aptana Studio. To learn more, be sure to check out the online documentation about Aptana PHP.
					- PDT
						- PDT is a PHP Development Tools framework that’s part of the Eclipse project. PDT includes all the necessary tools for you to create PHP-based Web applications.
					- VS.Php
						- VS.Php is a PHP IDE for MS Visual Studio, making it a great IDE for recently converted ASP developers who have used MS VS to develop Web applications. To get you up and running ASAP with VS.Php, check out Jcx.Software’s online tutorials as well as its online documentation.
					- PHPEdit
						- PHPEdit is an excellent PHP editor/IDE with a ton of useful features and a very intuitive user interface. To learn more about why PHPEdit is a good IDE, read the 10 reasons to use PHPEdit and view the introductory screencast about PHPEdit.
					
>>>				- Sources and Resources
					- PHP Function Reference
						- PHP Function Reference (PHPfr) is a Mac OS X dashboard widget that provides a fast look-up of information about the PHP Web programming language.
					- 30 Useful PHP Classes and Components
						- 30 useful PHP classes and components that you can use to test, develop, debug and deploy your PHP applications.
					- PHP advent 2008
						- In December, phpadvent.org collected the wisdom of people in the PHP community who kindly donated their ideas and tips to see us through the new year.
					- Useful in-browser development tools for PHP
						- 
					- PHPClasses.org
						- A huge repository of various PHP classes.
					- PHP Developer’s Toolbox
						- Various PHP-related resources in a brief overview.
					
					
>>>		4- cli and batch
			- cron de lancement plannifié
				- proc
					- access rwx to be set for files
					- Minutes Heure Jour Mois Jour-Semaine chemin/dossier/script_a_executer
					- php exemple.php argument1 Argument2 argumentTrois
					- linux
						- crontab
					- windows
						- xp & 7 > windows task scheduler
						- commande-line > At command
						- 8, 10, Server 2012 > schtasks
						- powershell > sheduled tasks cmdlets in windows powershell
					- commandes php ligne de commande
						- http://php.net/manual/fr/refs.utilspec.cmdline.php
						- http://php.net/manual/fr/features.commandline.php
				- liens
					- https://initscreen.developpez.com/tutoriels/batch/apprendre-la-programmation-de-script-batch/
						- windows
					- https://eric-sanchis.developpez.com/linux/shell/bash/
						- linux
					- https://marcg.developpez.com/ksh/
						- linux
					- https://ineumann.developpez.com/tutoriels/linux/exercices-shell/
						- linux
					- https://frederic-lang.developpez.com/tutoriels/linux/prog-shell/
						- linux
						
					- https://www.ibm.com/developerworks/library/os-php-batch/index.html
						- windows
					- https://craym.eu/tutoriels/developpement/tache_cron_script_php.html
						- windows
					- http://sdz.tdct.org/sdz/executer-php-en-cli-console.html
						- windows
					- http://support.sugarcrm.com/Knowledge_Base/Schedulers/Setting_Up_the_Scheduler/
						- windows
						- linux
					- https://www.thegeekstuff.com/2011/07/php-cron-job/
						- windows
>>>		5- framework
			- Symfony
				- formation Symfony 3
					- voir cours
						- structure et algo de développement d'un cycle mvc
							- 
						- plan
							- intoduction
							- what is symfony
							- installation
							- application structure
							- hello-world
							- twig
							- translation
							- forms
							- twig
							- dependency injection
							- automated tests
							- security
							- gestion du cache proxy et navigateur
					- bundles / composant tiers orm, (tableau) grid, form, ...
						- voir mail
				- Synthèse Dév - Symfony3
					- voir cours
						- structure et algo de développement d'un cycle mvc
							- 
						- plan
							Partie 1 - Vue d'ensemble de Symfony
							1. Symfony, un framework PHP
							2. Vous avez dit Symfony ?
							3. Utilisons la console pour créer un bundle
							4. Aux origines de Symfony (interview)
							 Quiz : Quiz 1
							Partie 2 - Les bases de Symfony
							1. Mon premier « Hello World ! » avec Symfony
							2. Le routeur de Symfony
							3. Les contrôleurs avec Symfony
							4. Le moteur de templates Twig
							5. Installer un bundle grâce à Composer
							6. Les services, théorie et création
							 Quiz : Quiz 2
							 Activité : Créez votre CoreBundle pour les gouverner tous
							Partie 3 - Gérer la base de données avec Doctrine2
							1. La couche métier : les entités
							2. Manipuler ses entités avec Doctrine2
							3. Les relations entre entités avec Doctrine2
							4. Récupérer ses entités avec Doctrine2
							5. Les évènements et extensions Doctrine
							6. TP : Consolidation de notre code
							 Quiz : Quiz 3
							 Activité : Créer un système pour nettoyer vos entités
							Partie 4 - Allons plus loin avec Symfony
							1. Créer des formulaires avec Symfony
							2. Validez vos données
							3. Sécurité et gestion des utilisateurs
							4. Les services, utilisation poussée
							5. Le gestionnaire d'évènements de Symfony
							6. Traduire son site
							 Quiz : Quiz 4
							Partie 5 - Préparer la mise en ligne
							1. Convertir les paramètres de requêtes
							2. Personnaliser les pages d'erreur
							3. Utiliser Assetic pour gérer les codes CSS et JS de votre site
							4. Utiliser la console directement depuis le navigateur
							5. Déployer son site Symfony en production
							 Quiz : Quiz 5		
							
							Extention 1 - Complément manquant de la formation Symfony3 + liste certificat
								1. 
							Extention 2 - Complément manquant du manuel pdf Eyrolles Symfony2
								1. 
								
					- bundles / composant tiers orm, (tableau) grid, form, ...
						- voir fichier
				- Manuel en ligne
					- index des procédés
						- voir fichier
					- Extention 1 - Complément manquant du manuel en ligne Symfony3
						- composant tiers orm, (tableau) grid, form, ...
							- How to Install and Use the Symfony Components
								- 
							- The Asset Component
								- 
							- The BrowserKit Component
								- 
							- The Cache Component
								- 
							- The ClassLoader Component
								- 
							- The Config Component
								- 
							- The Console Component
								- 
							- The CssSelector Component
								- 
							- The Debug Component
								- 
							- The DependencyInjection Component
								- 
							- The DomCrawler Component
								- 
							- The Dotenv Component
								- 
							- The EventDispatcher Component
								- 
							- The ExpressionLanguage Component
								- 
							- The Filesystem Component
								- 
							- The Finder Component
								- 
							- The Form Component
								- 
							- The HttpFoundation Component
								- 
							- The HttpKernel Component
								- 
							- The Intl Component
								- 
							- The Ldap Component
								- 
							- The OptionsResolver Component
								- 
							- The PHPUnit Bridge
								- 
							- The Process Component
								- 
							- The PropertyAccess Component
								- 
							- The PropertyInfo Component
								- 
							- The Routing Component
								- 
							- The Security Component
								- 
							- The Serializer Component
								- 
							- The Stopwatch Component
								- 
							- The Templating Component
								- 
							- The Translation Component
								- 
							- The Validator Component
								- 
							- The VarDumper Component
								- 
							- The Workflow Component
								- 
							- The Yaml Component
								- 
						2. Bundles
							- Doctrine project
								- DoctrineBundle
									- 
								- DoctrineFixturesBundle
									- 
								- DoctrineMongoDBBundle
									- 
								- DoctrineMigrationsBundle
									- 
								- DoctrineCacheBundle
									- 
							- https://thephpleague.com/#packages
								- 
									- 
							- https://github.com/FriendsOfSymfony
								- 
									- 
							- https://github.com/guzzle/guzzle
								- 
									- 
							- https://sonata-project.org/
								- 
									- 
							- https://github.com/snc/SncRedisBundle
								- 
									- 
							- https://github.com/php-amqplib/RabbitMqBundle
								- 
									- 
							- http://docs.sylius.org/en/latest/
								- 
									- 
							- https://github.com/KnpLabs
								- 
									- 
							- https://github.com/andreia/awesome-symfony
								- 
									- 
							- https://github.com/ziadoz/awesome-php
								- 
									- 
							- https://packagist.org/
								- 
									- 
						3. Divers
							- HTTP Cache
								- 
							- Performance
								- symfony apc fonction
							- Profiler
								- 
							- Testing
								- 
		
				- livres et pdf
					- index des procédés
						- voir fichier
					- bundles / composant tiers orm, (tableau) grid, form, ...
						- voir fichier
					- Extention 2 - Complément manquant du manuel pdf Eyrolles Symfony2
						1. Sécuriser les objets avec les votants
							- Symfony\Component\Security\Core\Authorization\Voter\VoterInterface
						2. Tests
							- Unitaires
							- Fonctionnel
						3. Le déploiement complet
							- Capistrano ou Capifony
			- Zend
				- Manuel en ligne
					- structure et algo de développement d'un cycle mvc
						- 
					- indexées des procédées
						- 
					- modules
						- 
					- composants tiers
						- 
				- livres et pdf
					- structure et algo de développement d'un cycle mvc
						- 
					- indexées des procédées
						- 
					- modules
						- 
					- composants tiers
						- 
			- Laravel
				- Manuel en ligne
					- structure et algo de développement d'un cycle mvc
						- 
					- indexées des procédées
						- 
					- modules
						- 
					- composants tiers
						- 
				- livres et pdf
					- structure et algo de développement d'un cycle mvc
						- 
					- indexées des procédées
						- 
					- modules
						- 
					- composants tiers
						- 
			- Yii1 + Yii2
				- Manuel en ligne
					- structure et algo de développement d'un cycle mvc
						- 
					- indexées des procédées
						- 
					- modules
						- 
					- composants tiers
						- 
				- livres et pdf
					- structure et algo de développement d'un cycle mvc
						- 
					- indexées des procédées
						- 
					- modules
						- 
					- composants tiers
						- 
			
			
>>>		6- api, web services et micro-services
			- http
				- header
			- web services
				- 
				- 
				- 
				- 
				- 
			- framework
				- Lumen
				- Slim
				- Silex
				- Wave
				- Limonade
				- Guzzle
				- Zend
				- Symfony
				- Recess
				- Frapi
				- Epiphany
				
				
>>>		7- Php livres
			- PHP Objects, Patterns, and Practice, 4th Edition
				- Séléniume, PhpDocumentor, ...
			- Learning PHP Design Patterns
				- Poo
			- Professional PHP Design Patterns
				- Dév cycle
			- Développer avec Symfony2
				- FOSUserBundle, internationalisation, 
				test fonctionnel ou test unitaire, 
				déployer l’application (Le serveur de développement, 
				de staging (« mise en scène »), 
				de préproduction,
				de production), ...
>>>		8- Tests
			- phpUnit
				- tdd
			- selenium
				- 
			- jenkis
				- 
			- behat
				- 
			- blackfire
				- 
			- insight
				- 

>>>		9- Formation Zend PHP

			Exam Information

			> PHP Basics

				Syntax
				Operators
				Variables
				Constants
				Control Structures
				Language Constructs and Functions
				Namespaces
				Extensions
				Config
				Performance/bytecode caching
				- http://php.net/manual/fr/book.bcompiler.php
				- http://php.net/manual/fr/book.bcompiler.php


			> Functions

				Syntax
				Arguments
				Variables
				References
				Returns
				Variable Scope
				Anonymous Functions, closures
						- http://cowburn.info/2009/07/08/anonymous-closures/
						- http://php.net/manual/fr/functions.anonymous.php


			> Data Format & Types

				XML Basics
				SimpleXML
				XML Extension
				Xpath
				Webservices Basics
				SOAP
				REST
				JSON & AJAX
				DateTime
				DOMDocument


			> Web Features

				Sessions
						- http://fr.php.net/manual/fr/function.session-cache-limiter.php
				Forms
				GET and POST data
				Cookies
				HTTP Headers
						- http://php.net/manual/fr/function.header.php
						- https://addons.mozilla.org/fr/firefox/addon/live-http-headers/
						- http://fr.http.header.free.fr/http.html
						- http://www.referencement-seo.fr/Entete-HTTP-Header-HTTP.seo
						- http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
				HTTP Authentication
						- http://www.securiteinfo.com/conseils/htaccess.shtml
						- http://www.phpindex.com/index.php/2001/05/14/631-un-module-d-authentification-http-pour-votre-site
						- http://php.net/manual/fr/features.http-auth.php
						- http://httpd.apache.org/docs/trunk/fr/howto/auth.html


			> I/O

				Files
				Reading
				Writing
				File System Functions
				Streams
						- http://www.php.net/manual/en/function.stream-context-create.php
				Contexts


			> Strings & Patterns

				Quoting
				Matching
				Extracting
				Searching
				Replacing
				Formatting
				PCRE
						- http://www.php.net/manual/fr/book.pcre.php
						- http://forum.phpfrance.com/faq-tutoriels/php-pcre-aide-memoire-t12979.html
						- http://lumadis.be/regex/tuto_pcre.php
						- http://www.expreg.com/pcreplus.php
				HEREDOC and NOWDOC
				Encodings


			> Object Oriented Programming

				Instantiation
				Modifiers/Inheritance
				Interfaces
				Exceptions
				Static Methods & Properties
				Autoload
				Reflection
				Type Hinting
				Class Constants
				Late Static Binding
				Magic (_*) Methods
				Instance Methods & Properties
				Class Definition
				SPL


			> Databases

				SQL
				Joins
				Analyzing Queries
				Prepared Statements
				Transactions
				PDO


			> Security

				Configuration
				Session Security
				Cross-Site Scripting
				Cross-Site Request Forgeries
				SQL Injection
				Remote Code Injection
				Email Injection
				Filter Input
				Escape Output
				Encryption, Hashing algorithms
				File uploads
				Data storage
				SSL


			> Arrays

				Enumerated Arrays
				Associative Arrays
				Array Iteration
				Multi-Dimensional Arrays
				Array Functions
				SPL, Objects as arrays
						- http://php.net/manual/fr/book.spl.php
						- http://php.net/manual/en/function.get-object-vars.php
						- http://php.net/manual/fr/class.arrayobject.php



>>>		10- Micro Services
			- 











