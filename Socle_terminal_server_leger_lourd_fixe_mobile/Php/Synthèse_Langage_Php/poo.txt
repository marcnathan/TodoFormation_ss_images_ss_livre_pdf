> Notes
	- 
	- 
	- 
	- 


- poo
	- théorie et classes
		- ressources
			- net
				- https://openclassrooms.com/courses/programmez-en-oriente-objet-en-php#
			- livre
				- 
		- lien indexe complet
			- Les classes et les objets
				- Syntaxe de base
				- Propriétés
				- Constantes de classe
				- Auto-chargement de classes
				- Constructeurs et destructeurs
				- Visibilité
				- Héritage
				- L'opérateur de résolution de portée (::)
				- Statique
				- Abstraction de classes
					> Implémentation
					- Se définit avec le mot clé Abstract class
					- Ne peuvent être instanciés

					> Propriétés
					- On ne peut pas y définir une propriété 

					> Méthodes
					- Toute méthode abstraite doit être définit dans la class héritière
						- Ces méthodes se préfixe avec le mot clé abstract
						- Et perdent cette affectation de l'implémentation
					- La signature des méthodes implémentés doit correspondre dans l'héritage
					- On peut y implémenter des méthodes non abstraite
					- Leur visibilité peut être étendue de l'héritage

					> Héritage
					- S'effectue par le mot clé extends
					- On ne peut hériter que d'une classe abstract (?)
				- Interfaces
					> Implémentation
					- Contrainte d'emploi permettant, des injections de classes, à la classe de savoir si des méthodes existent
					- Se définit par la mot clé interphase
					- Ne peuvent être instanciés

					> Propriétés
					- On peut définir des propriétés
					- Les propriétés définit ne peuvent pas être redéfinit
					- On peut appeler les constantes hors de l'interphase

					> Méthodes
					- Toutes les méthodes sont déclarées public
					- Mais aucune n'a de contenu de spécifié
					- La signature des méthodes implémentés doit correspondre dans l'héritage

					> Héritage
					- On peut étendre des interphases par des interphases par le mot clé extends
					- S'effectue par le mot clé implements
					- On peut hériter de plusieurs interphases si les méthodes sont différentes
				- Traits
					> Implémentation
					- Quand on doit effectuer la même opération (celle de formater en HTML) dans deux classes complètement différentes et indépendantes
					- Se définit par la mot clé trait
					- Ne peuvent être instanciés

					> Propriétés
					- On peut définir des propriétés
					- Les propriétés statiques ne peuvent être définit que dans les méthodes
					- Les propriétés définit ne peuvent être redéfinits

					> Méthodes
					- Elles pré-valent par rapport à celles de la class parente
					- Elles sous-valent par rapport à celles de la class de référence
					- On peut définir des méthodes abstracts
					- Des méthodes statiques peuvent définits
					- Leurs visibilités peuvent être redéfinit avec le mot clé as
					- Elles peuvent porter des alias
					- En cas de conflit d'héritage on peut définir une sélection par la syntaxe
					use A, B {
							B::smallTalk insteadof A;
							A::bigTalk insteadof B;
							B::bigTalk as talk;
						}

					> Héritage
					- S'effectue par le mot clé use et multiple par la juxtaposition
					- On peut étendre des trait par le mot clé use dans le Trait
					- On peut hériter de plusieurs interphases
				- Classes anonymes
				- Surcharge magique
				- Parcours d'objets
				- Méthodes magiques
				- Mot-clé "final"
				- Clônage d'objets
				- Comparaison d'objets
				- Typage objet
				- Late Static Bindings (Résolution statique à la volée)
				- Objets et références
				- Sérialisation d'objets
				- Modifications en POO (Programmation orientée objet)
			- Les espaces de noms
			- Les exceptions
				- try{}catch(){}catch(){}finally{}
			- Exceptions prédéfinies
				- Exception
				- ErrorException
			- Interfaces et Classes prédéfinies
				- php
					- Traversable
					- Iterator
					- IteratorAggregate
					- Throwable
					- ArrayAccess
					- Serializable
					- Closure
					- Generator
				- spl
					- Countable
					- OuterIterator
					- RecursiveIterator
					- SeekableIterator
					- SplObserver
					- SplSubject
				- classes réservées
					- Classes standards
						- Directory
						- stdClass
						- __PHP_Incomplete_Class
					- Classes prédéfinies en PHP 5
						- Exception
						- ErrorException
						- php_user_filter
					- Closure
						- Closure
					- Générateur
						- Generator
					- Les classes et les interfaces prédéfinies depuis PHP 7
						- ArithmeticError
						- AssertionError
						- DivisionByZeroError
						- Error
						- Throwable
						- ParseError
						- TypeError
					- Classes spéciales
						- self
						- static
						- parent
			- Référence des fonctions et classes natifs
				- API de réflexivité ReflectionClass
					- pour identifier dynamiquement les classes de leurs propriétés (classes, ...), méthodes et autres inclusions (héritage, interfases, ...)
				- ArrayIterator
				- Generator
				- PDO
				- Exceptions spl
				- et autres classes voir php7
		- procédées essentiels
			- éléments de conception de classes usuelles pour contrôleurs et modèles
				- dont
					- héritage
					- opérateur de résolution de porté
					- méthodes magiques
			- interfaces
				- Iterator
				- IteratorAggregate
				- ArrayAccess
				- Countable
				- RecursiveIterator
				- SeekableIterator
				- SplObserver
			- abstraits
			- traits
			- exceptions
			- classes natives
			- api de réflexivités